<?xml version='1.0' encoding='UTF-8'?>
<glyph name="Otilde" format="2">
  <advance width="1593"/>
  <unicode hex="00D5"/>
  <outline>
    <component base="O" identifier="component0"/>
    <component base="tilde" xOffset="459" yOffset="337" identifier="component1"/>
  </outline>
  <lib>
    <dict>
      <key>public.objectLibs</key>
      <dict>
        <key>component0</key>
        <dict>
          <key>public.truetype.roundOffsetToGrid</key>
          <true/>
          <key>public.truetype.useMyMetrics</key>
          <true/>
        </dict>
        <key>component1</key>
        <dict>
          <key>public.truetype.roundOffsetToGrid</key>
          <true/>
          <key>public.truetype.useMyMetrics</key>
          <false/>
        </dict>
      </dict>
      <key>public.truetype.instructions</key>
      <dict>
        <key>assembly</key>
        <string>
PUSHB[ ]	/* 4 values pushed */
2 2 1 43
PUSHW[ ]	/* 2 values pushed */
545 41
SVTCA[0]	/* SetFPVectorToAxis */
CALL[ ]	/* CallFunction */
SVTCA[1]	/* SetFPVectorToAxis */
PUSHB[ ]	/* 2 values pushed */
6 2
RS[ ]	/* ReadStore */
EQ[ ]	/* Equal */
IF[ ]	/* If */
  PUSHB[ ]	/* 6 values pushed */
  0 28 40 3 3 65
  CALL[ ]	/* CallFunction */
ELSE[ ]	/* Else */
  NPUSHB[ ]	/* 10 values pushed */
  47 45 63 45 2 95 45 1 45 3
  PUSHW[ ]	/* 1 value pushed */
  -30
  PUSHB[ ]	/* 2 values pushed */
  72 43
  CALL[ ]	/* CallFunction */
  DELTAP1[ ]	/* DeltaExceptionP1 */
  DELTAP1[ ]	/* DeltaExceptionP1 */
EIF[ ]	/* EndIf */
SHC[1]	/* ShiftContourByLastPt */
</string>
        <key>formatVersion</key>
        <string>1</string>
        <key>id</key>
        <string>b52f7e8f9cc21a3b05fbad1b74438a72b5194c6400e8447f41b9da1cbc4379d1f35ae4e72c8f760b2d579cbd465389dfc20afeb800ffd0cd03c610666aa91873</string>
      </dict>
      <key>public.truetype.overlap</key>
      <false/>
    </dict>
  </lib>
</glyph>
