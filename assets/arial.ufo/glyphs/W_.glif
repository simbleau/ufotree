<?xml version='1.0' encoding='UTF-8'?>
<glyph name="W" format="2">
  <advance width="1933"/>
  <unicode hex="0057"/>
  <outline>
    <contour>
      <point x="414" y="0" type="line"/>
      <point x="25" y="1466" type="line"/>
      <point x="224" y="1466" type="line"/>
      <point x="447" y="505" type="line"/>
      <point x="483" y="354"/>
      <point x="509" y="205" type="qcurve"/>
      <point x="565" y="440"/>
      <point x="575" y="476" type="qcurve"/>
      <point x="854" y="1466" type="line"/>
      <point x="1088" y="1466" type="line"/>
      <point x="1298" y="724" type="line"/>
      <point x="1377" y="448"/>
      <point x="1412" y="205" type="qcurve"/>
      <point x="1440" y="344"/>
      <point x="1485" y="524" type="qcurve"/>
      <point x="1715" y="1466" type="line"/>
      <point x="1910" y="1466" type="line"/>
      <point x="1508" y="0" type="line"/>
      <point x="1321" y="0" type="line"/>
      <point x="1012" y="1117" type="line"/>
      <point x="973" y="1257"/>
      <point x="966" y="1289" type="qcurve"/>
      <point x="943" y="1188"/>
      <point x="923" y="1117" type="qcurve"/>
      <point x="612" y="0" type="line"/>
    </contour>
  </outline>
  <lib>
    <dict>
      <key>public.truetype.instructions</key>
      <dict>
        <key>assembly</key>
        <string>
NPUSHB[ ]	/* 38 values pushed */
41 0 38 17 41 18 38 24 57 0 54 17 57 18 54 24 73 0 71 17 73 18 71 24 88 0 87 17 88 18 87 24 16 152 8 152 15 2
PUSHB[ ]	/* 2 values pushed */
6 2
RS[ ]	/* ReadStore */
EQ[ ]	/* Equal */
IF[ ]	/* If */
  NPUSHB[ ]	/* 51 values pushed */
  16 1 26 25 43 21 52 5 52 12 68 5 68 12 75 21 84 5 84 12 91 21 100 5 100 12 107 21 116 5 116 12 123 21 15 5 21 12 3 0 1 18 8 0 8 15 2 8 2 1 2
  SVTCA[0]	/* SetFPVectorToAxis */
  MIAP[1]	/* MoveIndirectAbsPt */
  MIAP[1]	/* MoveIndirectAbsPt */
  MIAP[1]	/* MoveIndirectAbsPt */
  MIAP[1]	/* MoveIndirectAbsPt */
  MIAP[1]	/* MoveIndirectAbsPt */
  SRP1[ ]	/* SetRefPoint1 */
  SRP2[ ]	/* SetRefPoint2 */
  SLOOP[ ]	/* SetLoopVariable */
  IP[ ]	/* InterpolatePts */
  DELTAP1[ ]	/* DeltaExceptionP1 */
  SVTCA[1]	/* SetFPVectorToAxis */
  SRP1[ ]	/* SetRefPoint1 */
  SRP2[ ]	/* SetRefPoint2 */
  IP[ ]	/* InterpolatePts */
  IP[ ]	/* InterpolatePts */
ELSE[ ]	/* Else */
  NPUSHB[ ]	/* 30 values pushed */
  3 4 5 5 2 6 7 8 8 5 10 11 12 12 9 13 14 15 15 12 20 19 18 18 21 22 23 24 24 21
  PUSHW[ ]	/* 1 value pushed */
  -196
  PUSHB[ ]	/* 4 values pushed */
  5 0 24 32
  PUSHW[ ]	/* 1 value pushed */
  -196
  PUSHB[ ]	/* 4 values pushed */
  12 18 17 32
  PUSHW[ ]	/* 1 value pushed */
  -196
  NPUSHB[ ]	/* 90 values pushed */
  21 8 9 32 0 5 2 2 32 1 0 20 1 1 0 24 5 8 8 30 21 24 20 21 21 24 18 12 9 9 30 21 18 20 21 21 18 17 12 15 15 32 16 17 20 16 16 17 18 9 12 8 24 21 5 15 17 16 12 0 2 5 21 12 5 3 24 16 15 15 9 9 8 8 2 2 1 2 24 18 18 17 17 0 8 26 23 23 26 16
  NPUSHW[ ]	/* 9 values pushed */
  337 32 12 337 21 337 64 5 337
  PUSHB[ ]	/* 7 values pushed */
  32 32 1 1 1 25 25
  PUSHW[ ]	/* 1 value pushed */
  395
  PUSHB[ ]	/* 2 values pushed */
  168 24
  CALL[ ]	/* CallFunction */
  FLIPOFF[ ]	/* SetAutoFlipOff */
  SRP0[ ]	/* SetRefPoint0 */
  MIRP[10100]	/* MoveIndirectRelPt */
  DELTAP1[ ]	/* DeltaExceptionP1 */
  SMD[ ]	/* SetMinimumDistance */
  RTHG[ ]	/* RoundToHalfGrid */
  FLIPON[ ]	/* SetAutoFlipOn */
  MIRP[11101]	/* MoveIndirectRelPt */
  SMD[ ]	/* SetMinimumDistance */
  RTG[ ]	/* RoundToGrid */
  MIRP[11101]	/* MoveIndirectRelPt */
  MIRP[11101]	/* MoveIndirectRelPt */
  SMD[ ]	/* SetMinimumDistance */
  RTHG[ ]	/* RoundToHalfGrid */
  MIRP[11101]	/* MoveIndirectRelPt */
  RTG[ ]	/* RoundToGrid */
  FLIPOFF[ ]	/* SetAutoFlipOff */
  RCVT[ ]	/* ReadCVT */
  NEG[ ]	/* Negate */
  WCVTP[ ]	/* WriteCVTInPixels */
  MIRP[00110]	/* MoveIndirectRelPt */
  SVTCA[0]	/* SetFPVectorToAxis */
  MIAP[1]	/* MoveIndirectAbsPt */
  ALIGNRP[ ]	/* AlignRelativePt */
  SRP0[ ]	/* SetRefPoint0 */
  ALIGNRP[ ]	/* AlignRelativePt */
  SRP0[ ]	/* SetRefPoint0 */
  ALIGNRP[ ]	/* AlignRelativePt */
  MIAP[1]	/* MoveIndirectAbsPt */
  ALIGNRP[ ]	/* AlignRelativePt */
  SRP0[ ]	/* SetRefPoint0 */
  ALIGNRP[ ]	/* AlignRelativePt */
  SRP0[ ]	/* SetRefPoint0 */
  ALIGNRP[ ]	/* AlignRelativePt */
  SRP0[ ]	/* SetRefPoint0 */
  ALIGNRP[ ]	/* AlignRelativePt */
  SRP0[ ]	/* SetRefPoint0 */
  ALIGNRP[ ]	/* AlignRelativePt */
  SRP2[ ]	/* SetRefPoint2 */
  SLOOP[ ]	/* SetLoopVariable */
  IP[ ]	/* InterpolatePts */
  SVTCA[1]	/* SetFPVectorToAxis */
  SRP2[ ]	/* SetRefPoint2 */
  IP[ ]	/* InterpolatePts */
  IP[ ]	/* InterpolatePts */
  SRP1[ ]	/* SetRefPoint1 */
  SRP2[ ]	/* SetRefPoint2 */
  IP[ ]	/* InterpolatePts */
  IP[ ]	/* InterpolatePts */
  SRP1[ ]	/* SetRefPoint1 */
  SRP2[ ]	/* SetRefPoint2 */
  IP[ ]	/* InterpolatePts */
  IP[ ]	/* InterpolatePts */
  SRP1[ ]	/* SetRefPoint1 */
  IP[ ]	/* InterpolatePts */
  IP[ ]	/* InterpolatePts */
  SDPVTL[1]	/* SetDualPVectorToLine */
  FLIPON[ ]	/* SetAutoFlipOn */
  MDAP[0]	/* MoveDirectAbsPt */
  CALL[ ]	/* CallFunction */
  SDPVTL[1]	/* SetDualPVectorToLine */
  RDTG[ ]	/* RoundDownToGrid */
  MDRP[00100]	/* MoveDirectRelPt */
  SDPVTL[1]	/* SetDualPVectorToLine */
  MDAP[0]	/* MoveDirectAbsPt */
  RTG[ ]	/* RoundToGrid */
  CALL[ ]	/* CallFunction */
  SDPVTL[1]	/* SetDualPVectorToLine */
  RDTG[ ]	/* RoundDownToGrid */
  MDRP[00100]	/* MoveDirectRelPt */
  SDPVTL[1]	/* SetDualPVectorToLine */
  MDAP[0]	/* MoveDirectAbsPt */
  RTG[ ]	/* RoundToGrid */
  CALL[ ]	/* CallFunction */
  SDPVTL[1]	/* SetDualPVectorToLine */
  RDTG[ ]	/* RoundDownToGrid */
  MDRP[00100]	/* MoveDirectRelPt */
  SDPVTL[1]	/* SetDualPVectorToLine */
  MDAP[0]	/* MoveDirectAbsPt */
  RTG[ ]	/* RoundToGrid */
  CALL[ ]	/* CallFunction */
  SDPVTL[1]	/* SetDualPVectorToLine */
  RDTG[ ]	/* RoundDownToGrid */
  MDRP[00100]	/* MoveDirectRelPt */
  CALL[ ]	/* CallFunction */
  CALL[ ]	/* CallFunction */
  CALL[ ]	/* CallFunction */
  SDPVTL[1]	/* SetDualPVectorToLine */
  SFVTPV[ ]	/* SetFVectorToPVector */
  SRP0[ ]	/* SetRefPoint0 */
  MDRP[00100]	/* MoveDirectRelPt */
  MDRP[00100]	/* MoveDirectRelPt */
  SDPVTL[1]	/* SetDualPVectorToLine */
  SFVTPV[ ]	/* SetFVectorToPVector */
  SRP0[ ]	/* SetRefPoint0 */
  ALIGNRP[ ]	/* AlignRelativePt */
  MDRP[00100]	/* MoveDirectRelPt */
  SDPVTL[1]	/* SetDualPVectorToLine */
  SFVTPV[ ]	/* SetFVectorToPVector */
  SRP0[ ]	/* SetRefPoint0 */
  MDRP[00100]	/* MoveDirectRelPt */
  MDRP[00100]	/* MoveDirectRelPt */
  SDPVTL[1]	/* SetDualPVectorToLine */
  SFVTPV[ ]	/* SetFVectorToPVector */
  SRP0[ ]	/* SetRefPoint0 */
  MDRP[00100]	/* MoveDirectRelPt */
  MDRP[00100]	/* MoveDirectRelPt */
  SDPVTL[1]	/* SetDualPVectorToLine */
  SFVTPV[ ]	/* SetFVectorToPVector */
  SRP0[ ]	/* SetRefPoint0 */
  MDRP[00100]	/* MoveDirectRelPt */
  MDRP[00100]	/* MoveDirectRelPt */
  SDPVTL[1]	/* SetDualPVectorToLine */
  SFVTPV[ ]	/* SetFVectorToPVector */
  SRP0[ ]	/* SetRefPoint0 */
  MDRP[00100]	/* MoveDirectRelPt */
  MDRP[00100]	/* MoveDirectRelPt */
  SVTCA[1]	/* SetFPVectorToAxis */
  MPPEM[ ]	/* MeasurePixelPerEm */
  PUSHB[ ]	/* 1 value pushed */
  15
  GTEQ[ ]	/* GreaterThanOrEqual */
  MPPEM[ ]	/* MeasurePixelPerEm */
  PUSHB[ ]	/* 1 value pushed */
  17
  LTEQ[ ]	/* LessThenOrEqual */
  AND[ ]	/* LogicalAnd */
  IF[ ]	/* If */
    PUSHB[ ]	/* 3 values pushed */
    18 10 24
    PUSHW[ ]	/* 1 value pushed */
    -10
    SHPIX[ ]	/* ShiftZoneByPixel */
    SHPIX[ ]	/* ShiftZoneByPixel */
  EIF[ ]	/* EndIf */
  SVTCA[1]	/* SetFPVectorToAxis */
  MPPEM[ ]	/* MeasurePixelPerEm */
  PUSHB[ ]	/* 1 value pushed */
  37
  GTEQ[ ]	/* GreaterThanOrEqual */
  MPPEM[ ]	/* MeasurePixelPerEm */
  PUSHB[ ]	/* 1 value pushed */
  42
  LTEQ[ ]	/* LessThenOrEqual */
  AND[ ]	/* LogicalAnd */
  IF[ ]	/* If */
    PUSHW[ ]	/* 2 values pushed */
    0 -64
    SHPIX[ ]	/* ShiftZoneByPixel */
  EIF[ ]	/* EndIf */
  SVTCA[0]	/* SetFPVectorToAxis */
  MPPEM[ ]	/* MeasurePixelPerEm */
  PUSHB[ ]	/* 1 value pushed */
  11
  GTEQ[ ]	/* GreaterThanOrEqual */
  MPPEM[ ]	/* MeasurePixelPerEm */
  PUSHB[ ]	/* 1 value pushed */
  14
  LTEQ[ ]	/* LessThenOrEqual */
  AND[ ]	/* LogicalAnd */
  IF[ ]	/* If */
    PUSHB[ ]	/* 4 values pushed */
    12 64 5 64
    SHPIX[ ]	/* ShiftZoneByPixel */
    SHPIX[ ]	/* ShiftZoneByPixel */
  EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
IUP[1]	/* InterpolateUntPts */
IUP[0]	/* InterpolateUntPts */
SVTCA[1]	/* SetFPVectorToAxis */
DELTAP3[ ]	/* DeltaExceptionP3 */
DELTAP1[ ]	/* DeltaExceptionP1 */
</string>
        <key>formatVersion</key>
        <string>1</string>
        <key>id</key>
        <string>495d6bef4384af46421fb01ddea9f4d52d4c788844c051b2838e9bcdd12e9cf0e99005a5a2c4eecbdf659bd51379a4449a3cca2a94fa745ee591c6c28dc2735b</string>
      </dict>
    </dict>
  </lib>
</glyph>
