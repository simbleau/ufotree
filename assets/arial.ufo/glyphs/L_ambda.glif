<?xml version='1.0' encoding='UTF-8'?>
<glyph name="Lambda" format="2">
  <advance width="1368"/>
  <unicode hex="039B"/>
  <outline>
    <contour>
      <point x="784" y="1466" type="line"/>
      <point x="1352" y="0" type="line"/>
      <point x="1141" y="0" type="line"/>
      <point x="760" y="1064" type="line"/>
      <point x="710" y="1204"/>
      <point x="683" y="1305" type="qcurve"/>
      <point x="650" y="1184"/>
      <point x="605" y="1064" type="qcurve"/>
      <point x="209" y="0" type="line"/>
      <point x="11" y="0" type="line"/>
      <point x="584" y="1466" type="line"/>
    </contour>
  </outline>
  <lib>
    <dict>
      <key>public.truetype.instructions</key>
      <dict>
        <key>assembly</key>
        <string>
NPUSHB[ ]	/* 26 values pushed */
95 5 1 0 12 47 12 48 12 111 12 4 87 3 92 4 86 5 3 10 8 15 16 2 85 0
PUSHW[ ]	/* 1 value pushed */
-8
NPUSHB[ ]	/* 17 values pushed */
15 16 2 85 3 5 5 2 7 8 8 5 0 1 10 9 5
PUSHW[ ]	/* 1 value pushed */
-18
NPUSHB[ ]	/* 9 values pushed */
12 12 2 85 5 2 5 8 2
PUSHW[ ]	/* 1 value pushed */
-20
NPUSHB[ ]	/* 13 values pushed */
12 12 6 85 2 32 1 0 20 1 1 0 5
PUSHW[ ]	/* 1 value pushed */
-18
NPUSHB[ ]	/* 40 values pushed */
12 12 2 85 5 8 5 2 8 12 12 13 6 85 8 32 9 10 20 9 9 10 5 0 1 9 8 8 2 1 8 10 0 2 8 10 9 0 2 1
PUSHW[ ]	/* 3 values pushed */
351 9 -8
PUSHB[ ]	/* 5 values pushed */
13 13 2 85 9
PUSHW[ ]	/* 3 values pushed */
351 5 -12
NPUSHB[ ]	/* 13 values pushed */
11 11 6 85 0 5 48 5 2 5 5 12 11
RTHG[ ]	/* RoundToHalfGrid */
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
MDAP[1]	/* MoveDirectAbsPt */
DELTAP1[ ]	/* DeltaExceptionP1 */
CALL[ ]	/* CallFunction */
RTG[ ]	/* RoundToGrid */
MIRP[01101]	/* MoveIndirectRelPt */
CALL[ ]	/* CallFunction */
MIRP[01101]	/* MoveIndirectRelPt */
IP[ ]	/* InterpolatePts */
IP[ ]	/* InterpolatePts */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFPVectorToAxis */
MIAP[1]	/* MoveIndirectAbsPt */
ALIGNRP[ ]	/* AlignRelativePt */
MIAP[1]	/* MoveIndirectAbsPt */
ALIGNRP[ ]	/* AlignRelativePt */
MIAP[1]	/* MoveIndirectAbsPt */
ALIGNRP[ ]	/* AlignRelativePt */
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SDPVTL[1]	/* SetDualPVectorToLine */
SFVTCA[1]	/* SetFVectorToAxis */
MDAP[0]	/* MoveDirectAbsPt */
CALL[ ]	/* CallFunction */
CALL[ ]	/* CallFunction */
SFVTL[0]	/* SetFVectorToLine */
RDTG[ ]	/* RoundDownToGrid */
SRP0[ ]	/* SetRefPoint0 */
MDRP[00100]	/* MoveDirectRelPt */
CALL[ ]	/* CallFunction */
SDPVTL[1]	/* SetDualPVectorToLine */
SFVTCA[1]	/* SetFVectorToAxis */
MDAP[0]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
CALL[ ]	/* CallFunction */
CALL[ ]	/* CallFunction */
SFVTL[0]	/* SetFVectorToLine */
RDTG[ ]	/* RoundDownToGrid */
SRP0[ ]	/* SetRefPoint0 */
MDRP[00100]	/* MoveDirectRelPt */
CALL[ ]	/* CallFunction */
SVTCA[1]	/* SetFPVectorToAxis */
SRP1[ ]	/* SetRefPoint1 */
IP[ ]	/* InterpolatePts */
SRP1[ ]	/* SetRefPoint1 */
IP[ ]	/* InterpolatePts */
SDPVTL[1]	/* SetDualPVectorToLine */
SFVTPV[ ]	/* SetFVectorToPVector */
SRP0[ ]	/* SetRefPoint0 */
MDRP[00100]	/* MoveDirectRelPt */
SDPVTL[1]	/* SetDualPVectorToLine */
SFVTPV[ ]	/* SetFVectorToPVector */
SRP0[ ]	/* SetRefPoint0 */
MDRP[00100]	/* MoveDirectRelPt */
IUP[1]	/* InterpolateUntPts */
IUP[0]	/* InterpolateUntPts */
SVTCA[1]	/* SetFPVectorToAxis */
CALL[ ]	/* CallFunction */
CALL[ ]	/* CallFunction */
DELTAP3[ ]	/* DeltaExceptionP3 */
DELTAP1[ ]	/* DeltaExceptionP1 */
SVTCA[0]	/* SetFPVectorToAxis */
DELTAP3[ ]	/* DeltaExceptionP3 */
</string>
        <key>formatVersion</key>
        <string>1</string>
        <key>id</key>
        <string>w1368l784+1466l1352+0l1141+0l760+1064o710+1204q683+1305o650+1184q605+1064l209+0l11+0l584+1466|</string>
      </dict>
    </dict>
  </lib>
</glyph>
