<?xml version='1.0' encoding='UTF-8'?>
<glyph name="uni049D" format="2">
  <advance width="896"/>
  <unicode hex="049D"/>
  <outline>
    <contour>
      <point x="912" y="0" type="line"/>
      <point x="714" y="0" type="line"/>
      <point x="522" y="329" type="line"/>
      <point x="508" y="353"/>
      <point x="491" y="378" type="qcurve"/>
      <point x="491" y="164" type="line"/>
      <point x="392" y="164" type="line"/>
      <point x="392" y="475" type="line"/>
      <point x="357" y="491"/>
      <point x="314" y="491" type="qcurve"/>
      <point x="314" y="0" type="line"/>
      <point x="134" y="0" type="line"/>
      <point x="134" y="1062" type="line"/>
      <point x="314" y="1062" type="line"/>
      <point x="314" y="603" type="line"/>
      <point x="359" y="603"/>
      <point x="392" y="613" type="qcurve"/>
      <point x="392" y="937" type="line"/>
      <point x="491" y="937" type="line"/>
      <point x="491" y="728" type="line"/>
      <point x="512" y="771"/>
      <point x="536" y="828" type="qcurve"/>
      <point x="576" y="924"/>
      <point x="596" y="956" type="qcurve"/>
      <point x="640" y="1029"/>
      <point x="698" y="1048" type="qcurve"/>
      <point x="741" y="1062"/>
      <point x="836" y="1062" type="qcurve"/>
      <point x="872" y="1062" type="line"/>
      <point x="872" y="913" type="line"/>
      <point x="822" y="914" type="line"/>
      <point x="747" y="915"/>
      <point x="716" y="875" type="qcurve"/>
      <point x="706" y="862"/>
      <point x="667" y="762" type="qcurve"/>
      <point x="626" y="658"/>
      <point x="592" y="618" type="qcurve"/>
      <point x="551" y="570"/>
      <point x="497" y="545" type="qcurve"/>
      <point x="603" y="517"/>
      <point x="715" y="329" type="qcurve"/>
    </contour>
  </outline>
  <lib>
    <dict>
      <key>public.truetype.instructions</key>
      <dict>
        <key>assembly</key>
        <string>
PUSHB[ ]	/* 7 values pushed */
105 21 1 22 35 33 35
PUSHW[ ]	/* 1 value pushed */
-18
NPUSHB[ ]	/* 74 values pushed */
13 17 6 85 35 37 20 22 20 20 20 22 191 33 1 235 33 1 159 33 223 33 2 20 33 29 19 5 39 1 3 1 8 15 16 6 85 1 37 0 39 20 0 0 39 3 0 38 5 16 6 6 11 14 2 85 6 6 9 175 29 191 29 2 29 207 0 1 0 42 14 9 37 11
PUSHW[ ]	/* 1 value pushed */
-8
PUSHB[ ]	/* 5 values pushed */
16 16 2 85 11
PUSHW[ ]	/* 1 value pushed */
-6
NPUSHB[ ]	/* 17 values pushed */
14 14 2 85 11 6 12 12 2 85 11 6 11 11 2 85 11
PUSHW[ ]	/* 1 value pushed */
-10
PUSHB[ ]	/* 5 values pushed */
16 16 6 85 11
PUSHW[ ]	/* 1 value pushed */
-18
PUSHB[ ]	/* 5 values pushed */
15 15 6 85 11
PUSHW[ ]	/* 1 value pushed */
-4
NPUSHB[ ]	/* 59 values pushed */
13 13 6 85 11 10 12 12 6 85 0 11 32 11 48 11 3 11 78 41 35 33 9 29 43 22 14 28 13 39 0 38 9 20 19 16 3 17 17 13 14 43 9 7 4 3 3 9 6 9 6 9 10 13 6 0 1 10 10
SVTCA[0]	/* SetFPVectorToAxis */
MIAP[1]	/* MoveIndirectAbsPt */
MDRP[10000]	/* MoveDirectRelPt */
MDRP[00000]	/* MoveDirectRelPt */
MIAP[1]	/* MoveIndirectAbsPt */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IP[ ]	/* InterpolatePts */
MDAP[1]	/* MoveDirectAbsPt */
MDAP[1]	/* MoveDirectAbsPt */
SRP2[ ]	/* SetRefPoint2 */
SLOOP[ ]	/* SetLoopVariable */
IP[ ]	/* InterpolatePts */
SRP0[ ]	/* SetRefPoint0 */
MIRP[01101]	/* MoveIndirectRelPt */
SRP1[ ]	/* SetRefPoint1 */
IP[ ]	/* InterpolatePts */
MDAP[1]	/* MoveDirectAbsPt */
SLOOP[ ]	/* SetLoopVariable */
IP[ ]	/* InterpolatePts */
SRP1[ ]	/* SetRefPoint1 */
IP[ ]	/* InterpolatePts */
SRP1[ ]	/* SetRefPoint1 */
IP[ ]	/* InterpolatePts */
SRP0[ ]	/* SetRefPoint0 */
MDRP[10000]	/* MoveDirectRelPt */
SRP1[ ]	/* SetRefPoint1 */
IP[ ]	/* InterpolatePts */
MIRP[01101]	/* MoveIndirectRelPt */
SRP1[ ]	/* SetRefPoint1 */
IP[ ]	/* InterpolatePts */
IP[ ]	/* InterpolatePts */
SVTCA[1]	/* SetFPVectorToAxis */
SRP0[ ]	/* SetRefPoint0 */
MIRP[10110]	/* MoveIndirectRelPt */
DELTAP1[ ]	/* DeltaExceptionP1 */
CALL[ ]	/* CallFunction */
CALL[ ]	/* CallFunction */
CALL[ ]	/* CallFunction */
CALL[ ]	/* CallFunction */
CALL[ ]	/* CallFunction */
CALL[ ]	/* CallFunction */
CALL[ ]	/* CallFunction */
CALL[ ]	/* CallFunction */
MIRP[11101]	/* MoveIndirectRelPt */
MDRP[00000]	/* MoveDirectRelPt */
SRP0[ ]	/* SetRefPoint0 */
MDRP[10101]	/* MoveDirectRelPt */
DELTAP3[ ]	/* DeltaExceptionP3 */
MDRP[00110]	/* MoveDirectRelPt */
DELTAP3[ ]	/* DeltaExceptionP3 */
SRP1[ ]	/* SetRefPoint1 */
IP[ ]	/* InterpolatePts */
MDAP[1]	/* MoveDirectAbsPt */
CALL[ ]	/* CallFunction */
MDRP[00000]	/* MoveDirectRelPt */
MDRP[01101]	/* MoveDirectRelPt */
SHP[0]	/* ShiftPointByLastPoint */
SRP1[ ]	/* SetRefPoint1 */
IP[ ]	/* InterpolatePts */
SDPVTL[1]	/* SetDualPVectorToLine */
SRP0[ ]	/* SetRefPoint0 */
CALL[ ]	/* CallFunction */
CALL[ ]	/* CallFunction */
SDPVTL[1]	/* SetDualPVectorToLine */
RDTG[ ]	/* RoundDownToGrid */
MDRP[00100]	/* MoveDirectRelPt */
SVTCA[1]	/* SetFPVectorToAxis */
SRP0[ ]	/* SetRefPoint0 */
MDRP[00000]	/* MoveDirectRelPt */
SRP1[ ]	/* SetRefPoint1 */
IP[ ]	/* InterpolatePts */
IP[ ]	/* InterpolatePts */
DELTAP1[ ]	/* DeltaExceptionP1 */
DELTAP1[ ]	/* DeltaExceptionP1 */
DELTAP3[ ]	/* DeltaExceptionP3 */
SDPVTL[1]	/* SetDualPVectorToLine */
RTG[ ]	/* RoundToGrid */
SRP0[ ]	/* SetRefPoint0 */
CALL[ ]	/* CallFunction */
CALL[ ]	/* CallFunction */
SDPVTL[1]	/* SetDualPVectorToLine */
RDTG[ ]	/* RoundDownToGrid */
MDRP[00100]	/* MoveDirectRelPt */
PUSHB[ ]	/* 2 values pushed */
6 2
RS[ ]	/* ReadStore */
EQ[ ]	/* Equal */
IF[ ]	/* If */
  NPUSHB[ ]	/* 9 values pushed */
  45 6 34 17 61 6 50 17 4
  SVTCA[0]	/* SetFPVectorToAxis */
  DELTAP1[ ]	/* DeltaExceptionP1 */
EIF[ ]	/* EndIf */
IUP[1]	/* InterpolateUntPts */
IUP[0]	/* InterpolateUntPts */
SVTCA[1]	/* SetFPVectorToAxis */
DELTAP1[ ]	/* DeltaExceptionP1 */
</string>
        <key>formatVersion</key>
        <string>1</string>
        <key>id</key>
        <string>113d4cd556db0e3019af1c1eb0c361667049f62cfa4bc24d6c49951591774d1f662d262c487099f71e6dd77b1741bc718c3378cd158c6dbccb3046d9629d1119</string>
      </dict>
    </dict>
  </lib>
</glyph>
