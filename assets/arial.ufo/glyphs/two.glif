<?xml version='1.0' encoding='UTF-8'?>
<glyph name="two" format="2">
  <advance width="1139"/>
  <unicode hex="0032"/>
  <outline>
    <contour>
      <point x="1031" y="173" type="line"/>
      <point x="1031" y="0" type="line"/>
      <point x="62" y="0" type="line"/>
      <point x="60" y="65"/>
      <point x="83" y="125" type="qcurve"/>
      <point x="120" y="224"/>
      <point x="283" y="416"/>
      <point x="437" y="542" type="qcurve"/>
      <point x="676" y="738"/>
      <point x="844" y="967"/>
      <point x="844" y="1069" type="qcurve"/>
      <point x="844" y="1176"/>
      <point x="691" y="1323"/>
      <point x="568" y="1323" type="qcurve"/>
      <point x="438" y="1323"/>
      <point x="282" y="1167"/>
      <point x="281" y="1029" type="qcurve"/>
      <point x="96" y="1048" type="line"/>
      <point x="115" y="1255"/>
      <point x="363" y="1472"/>
      <point x="572" y="1472" type="qcurve"/>
      <point x="783" y="1472"/>
      <point x="1029" y="1238"/>
      <point x="1029" y="1065" type="qcurve"/>
      <point x="1029" y="977"/>
      <point x="957" y="807"/>
      <point x="790" y="619"/>
      <point x="596" y="455" type="qcurve"/>
      <point x="434" y="319"/>
      <point x="342" y="222"/>
      <point x="312" y="173" type="qcurve"/>
    </contour>
  </outline>
  <lib>
    <dict>
      <key>public.truetype.instructions</key>
      <dict>
        <key>assembly</key>
        <string>
PUSHB[ ]	/* 2 values pushed */
6 2
RS[ ]	/* ReadStore */
EQ[ ]	/* Equal */
IF[ ]	/* If */
  NPUSHB[ ]	/* 9 values pushed */
  17 16 13 24 19 19 6 85 13
  PUSHW[ ]	/* 1 value pushed */
  -12
  PUSHB[ ]	/* 5 values pushed */
  17 17 6 85 13
  PUSHW[ ]	/* 1 value pushed */
  -18
  NPUSHB[ ]	/* 9 values pushed */
  16 16 6 85 13 30 20 5 30
  PUSHW[ ]	/* 1 value pushed */
  -24
  NPUSHB[ ]	/* 23 values pushed */
  19 19 6 85 30 30 17 17 6 85 30 28 14 16 6 85 30 12 13 13 6 85 30
  PUSHW[ ]	/* 1 value pushed */
  699
  NPUSHB[ ]	/* 12 values pushed */
  2 10 23 23 32 31 16 17 2 2 32 31
  SRP1[ ]	/* SetRefPoint1 */
  SRP2[ ]	/* SetRefPoint2 */
  IP[ ]	/* InterpolatePts */
  MDAP[1]	/* MoveDirectAbsPt */
  MDRP[10100]	/* MoveDirectRelPt */
  MDRP[01101]	/* MoveDirectRelPt */
  SRP1[ ]	/* SetRefPoint1 */
  SRP2[ ]	/* SetRefPoint2 */
  IP[ ]	/* InterpolatePts */
  MDAP[1]	/* MoveDirectAbsPt */
  MDRP[01101]	/* MoveDirectRelPt */
  SVTCA[0]	/* SetFPVectorToAxis */
  MDAP[1]	/* MoveDirectAbsPt */
  MIRP[01101]	/* MoveIndirectRelPt */
  CALL[ ]	/* CallFunction */
  CALL[ ]	/* CallFunction */
  CALL[ ]	/* CallFunction */
  CALL[ ]	/* CallFunction */
  MIAP[1]	/* MoveIndirectAbsPt */
  MIRP[01101]	/* MoveIndirectRelPt */
  CALL[ ]	/* CallFunction */
  CALL[ ]	/* CallFunction */
  CALL[ ]	/* CallFunction */
  MDRP[00100]	/* MoveDirectRelPt */
  SHP[0]	/* ShiftPointByLastPoint */
  IUP[1]	/* InterpolateUntPts */
  IUP[0]	/* InterpolateUntPts */
ELSE[ ]	/* Else */
  PUSHB[ ]	/* 2 values pushed */
  2 2
  RS[ ]	/* ReadStore */
  EQ[ ]	/* Equal */
  IF[ ]	/* If */
    NPUSHB[ ]	/* 9 values pushed */
    17 16 13 12 18 18 2 85 13
    PUSHW[ ]	/* 1 value pushed */
    -12
    NPUSHB[ ]	/* 9 values pushed */
    15 17 2 85 13 30 20 5 30
    PUSHW[ ]	/* 1 value pushed */
    -32
    NPUSHB[ ]	/* 11 values pushed */
    18 19 2 85 30 20 15 17 2 85 30
    PUSHW[ ]	/* 1 value pushed */
    699
    PUSHB[ ]	/* 3 values pushed */
    2 10 23
    PUSHW[ ]	/* 1 value pushed */
    -24
    PUSHB[ ]	/* 5 values pushed */
    11 11 2 85 23
    PUSHW[ ]	/* 1 value pushed */
    -20
    NPUSHB[ ]	/* 14 values pushed */
    13 13 2 85 23 23 32 31 16 17 2 2 32 31
    SRP1[ ]	/* SetRefPoint1 */
    SRP2[ ]	/* SetRefPoint2 */
    IP[ ]	/* InterpolatePts */
    MDAP[1]	/* MoveDirectAbsPt */
    MDRP[10100]	/* MoveDirectRelPt */
    MDRP[01101]	/* MoveDirectRelPt */
    SRP1[ ]	/* SetRefPoint1 */
    SRP2[ ]	/* SetRefPoint2 */
    IP[ ]	/* InterpolatePts */
    MDAP[1]	/* MoveDirectAbsPt */
    CALL[ ]	/* CallFunction */
    CALL[ ]	/* CallFunction */
    MDRP[01101]	/* MoveDirectRelPt */
    SVTCA[0]	/* SetFPVectorToAxis */
    MDAP[1]	/* MoveDirectAbsPt */
    MIRP[01101]	/* MoveIndirectRelPt */
    CALL[ ]	/* CallFunction */
    CALL[ ]	/* CallFunction */
    MIAP[1]	/* MoveIndirectAbsPt */
    MIRP[01101]	/* MoveIndirectRelPt */
    CALL[ ]	/* CallFunction */
    CALL[ ]	/* CallFunction */
    MDRP[00100]	/* MoveDirectRelPt */
    SHP[0]	/* ShiftPointByLastPoint */
    IUP[1]	/* InterpolateUntPts */
    IUP[0]	/* InterpolateUntPts */
  ELSE[ ]	/* Else */
    NPUSHB[ ]	/* 54 values pushed */
    59 5 59 6 187 5 191 6 187 7 199 8 201 28 7 73 12 89 12 84 14 107 12 100 14 122 18 122 19 137 18 188 18 229 26 229 27 240 26 12 191 11 183 19 2 27 16 28 16 29 16 30 16 6
    PUSHW[ ]	/* 7 values pushed */
    -16 7 -32 8 -16 9 -16
    NPUSHB[ ]	/* 26 values pushed */
    30 10 16 8 6 6 202 28 26 20 28 28 26 8 28 26 3 1 2 8 26 28 3 13 30 16
    PUSHW[ ]	/* 1 value pushed */
    676
    PUSHB[ ]	/* 4 values pushed */
    79 17 1 17
    PUSHW[ ]	/* 1 value pushed */
    280
    PUSHB[ ]	/* 6 values pushed */
    13 30 20 5 0 30
    PUSHW[ ]	/* 1 value pushed */
    699
    NPUSHB[ ]	/* 15 values pushed */
    1 2 12 10 115 23 211 0 0 1 64 33 35 52 1
    PUSHW[ ]	/* 4 values pushed */
    641 32 16 312
    NPUSHB[ ]	/* 12 values pushed */
    17 181 63 2 95 2 111 2 127 2 4 2
    PUSHW[ ]	/* 3 values pushed */
    548 31 399
    PUSHB[ ]	/* 2 values pushed */
    139 24
    CALL[ ]	/* CallFunction */
    SRP0[ ]	/* SetRefPoint0 */
    MIRP[10110]	/* MoveIndirectRelPt */
    DELTAP1[ ]	/* DeltaExceptionP1 */
    MIRP[10100]	/* MoveIndirectRelPt */
    MIRP[01101]	/* MoveIndirectRelPt */
    SRP0[ ]	/* SetRefPoint0 */
    MIRP[10110]	/* MoveIndirectRelPt */
    CALL[ ]	/* CallFunction */
    ALIGNRP[ ]	/* AlignRelativePt */
    SRP0[ ]	/* SetRefPoint0 */
    MIRP[10100]	/* MoveIndirectRelPt */
    MIRP[01101]	/* MoveIndirectRelPt */
    SVTCA[0]	/* SetFPVectorToAxis */
    MIAP[1]	/* MoveIndirectAbsPt */
    ALIGNRP[ ]	/* AlignRelativePt */
    MIRP[11101]	/* MoveIndirectRelPt */
    ALIGNRP[ ]	/* AlignRelativePt */
    MIAP[1]	/* MoveIndirectAbsPt */
    MIRP[01101]	/* MoveIndirectRelPt */
    MIRP[11101]	/* MoveIndirectRelPt */
    DELTAP1[ ]	/* DeltaExceptionP1 */
    MIRP[00100]	/* MoveIndirectRelPt */
    SRP1[ ]	/* SetRefPoint1 */
    SRP2[ ]	/* SetRefPoint2 */
    SLOOP[ ]	/* SetLoopVariable */
    IP[ ]	/* InterpolatePts */
    SVTCA[1]	/* SetFPVectorToAxis */
    SRP1[ ]	/* SetRefPoint1 */
    SRP2[ ]	/* SetRefPoint2 */
    SLOOP[ ]	/* SetLoopVariable */
    IP[ ]	/* InterpolatePts */
    SDPVTL[1]	/* SetDualPVectorToLine */
    SFVTPV[ ]	/* SetFVectorToPVector */
    MDAP[0]	/* MoveDirectAbsPt */
    CALL[ ]	/* CallFunction */
    SFVTPV[ ]	/* SetFVectorToPVector */
    RDTG[ ]	/* RoundDownToGrid */
    SRP0[ ]	/* SetRefPoint0 */
    MDRP[00100]	/* MoveDirectRelPt */
    SVTCA[1]	/* SetFPVectorToAxis */
    SRP1[ ]	/* SetRefPoint1 */
    SRP2[ ]	/* SetRefPoint2 */
    IP[ ]	/* InterpolatePts */
    IUP[1]	/* InterpolateUntPts */
    IUP[0]	/* InterpolateUntPts */
    SVTCA[0]	/* SetFPVectorToAxis */
    SHPIX[ ]	/* ShiftZoneByPixel */
    SHPIX[ ]	/* ShiftZoneByPixel */
    SHPIX[ ]	/* ShiftZoneByPixel */
    SHPIX[ ]	/* ShiftZoneByPixel */
    SVTCA[1]	/* SetFPVectorToAxis */
    SHPIX[ ]	/* ShiftZoneByPixel */
    SHPIX[ ]	/* ShiftZoneByPixel */
    SHPIX[ ]	/* ShiftZoneByPixel */
    SHPIX[ ]	/* ShiftZoneByPixel */
    SVTCA[0]	/* SetFPVectorToAxis */
    DELTAP1[ ]	/* DeltaExceptionP1 */
    SVTCA[1]	/* SetFPVectorToAxis */
    DELTAP1[ ]	/* DeltaExceptionP1 */
    DELTAP3[ ]	/* DeltaExceptionP3 */
  EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
</string>
        <key>formatVersion</key>
        <string>1</string>
        <key>id</key>
        <string>e95ff107e35979cce7f068bd2348e2348ec3afadbd74313d18f473f7aa73e2a2553b14ceabb3788079bbde84566ca5a4bab17a1824dabc54a98672e7f66aaa89</string>
      </dict>
    </dict>
  </lib>
</glyph>
