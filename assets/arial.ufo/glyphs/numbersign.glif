<?xml version='1.0' encoding='UTF-8'?>
<glyph name="numbersign" format="2">
  <advance width="1139"/>
  <unicode hex="0023"/>
  <outline>
    <contour>
      <point x="103" y="-25" type="line"/>
      <point x="190" y="401" type="line"/>
      <point x="21" y="401" type="line"/>
      <point x="21" y="550" type="line"/>
      <point x="220" y="550" type="line"/>
      <point x="294" y="913" type="line"/>
      <point x="21" y="913" type="line"/>
      <point x="21" y="1062" type="line"/>
      <point x="324" y="1062" type="line"/>
      <point x="411" y="1491" type="line"/>
      <point x="561" y="1491" type="line"/>
      <point x="474" y="1062" type="line"/>
      <point x="789" y="1062" type="line"/>
      <point x="876" y="1491" type="line"/>
      <point x="1027" y="1491" type="line"/>
      <point x="940" y="1062" type="line"/>
      <point x="1113" y="1062" type="line"/>
      <point x="1113" y="913" type="line"/>
      <point x="910" y="913" type="line"/>
      <point x="835" y="550" type="line"/>
      <point x="1113" y="550" type="line"/>
      <point x="1113" y="401" type="line"/>
      <point x="805" y="401" type="line"/>
      <point x="718" y="-25" type="line"/>
      <point x="568" y="-25" type="line"/>
      <point x="654" y="401" type="line"/>
      <point x="340" y="401" type="line"/>
      <point x="253" y="-25" type="line"/>
    </contour>
    <contour>
      <point x="370" y="550" type="line"/>
      <point x="684" y="550" type="line"/>
      <point x="759" y="913" type="line"/>
      <point x="444" y="913" type="line"/>
    </contour>
  </outline>
  <lib>
    <dict>
      <key>public.truetype.instructions</key>
      <dict>
        <key>assembly</key>
        <string>
NPUSHB[ ]	/* 135 values pushed */
40 29 56 29 2 9 4 9 29 2 87 15 183 19 183 28 199 19 199 28 248 29 6 1 2 21 0 9 4 3 20 0 9 5 6 17 0 9 8 7 16 0 9 11 7 16 27 10 12 7 16 24 13 15 7 16 23 14 18 6 17 23 14 19 3 20 23 14 22 2 21 23 14 25 2 21 24 13 26 2 21 27 10 28 3 20 27 10 29 3 20 24 13 30 6 17 24 13 31 6 17 27 10 10 27 27 37 0 9 20 0 0 9 13 24 24 37 23 14 20 23 23 14 21 2 37 20 3 3 0 16 7 37 17 6
PUSHW[ ]	/* 1 value pushed */
438
NPUSHB[ ]	/* 56 values pushed */
14 14 13 13 10 10 9 0 27 24 24 23 23 0 10 21 20 20 17 16 62 14 7 6 6 3 2 62 0 24 148 13 23 148 13 37 14 64 17 57 79 14 159 14 2 14 117 33 10 148 27 9 148 27 37 0
PUSHW[ ]	/* 1 value pushed */
-64
PUSHB[ ]	/* 6 values pushed */
17 57 32 0 1 0
PUSHW[ ]	/* 1 value pushed */
673
PUSHB[ ]	/* 4 values pushed */
32 169 104 24
CALL[ ]	/* CallFunction */
SRP0[ ]	/* SetRefPoint0 */
MIRP[10110]	/* MoveIndirectRelPt */
DELTAP1[ ]	/* DeltaExceptionP1 */
CALL[ ]	/* CallFunction */
MIRP[01101]	/* MoveIndirectRelPt */
MIRP[00100]	/* MoveIndirectRelPt */
SRP0[ ]	/* SetRefPoint0 */
MIRP[00100]	/* MoveIndirectRelPt */
SRP0[ ]	/* SetRefPoint0 */
MIRP[10110]	/* MoveIndirectRelPt */
DELTAP1[ ]	/* DeltaExceptionP1 */
CALL[ ]	/* CallFunction */
MIRP[01101]	/* MoveIndirectRelPt */
MIRP[00100]	/* MoveIndirectRelPt */
SRP0[ ]	/* SetRefPoint0 */
MIRP[00100]	/* MoveIndirectRelPt */
SRP0[ ]	/* SetRefPoint0 */
MIRP[10100]	/* MoveIndirectRelPt */
ALIGNRP[ ]	/* AlignRelativePt */
ALIGNRP[ ]	/* AlignRelativePt */
SRP0[ ]	/* SetRefPoint0 */
ALIGNRP[ ]	/* AlignRelativePt */
SRP0[ ]	/* SetRefPoint0 */
MIRP[10100]	/* MoveIndirectRelPt */
ALIGNRP[ ]	/* AlignRelativePt */
ALIGNRP[ ]	/* AlignRelativePt */
SRP0[ ]	/* SetRefPoint0 */
ALIGNRP[ ]	/* AlignRelativePt */
SVTCA[0]	/* SetFPVectorToAxis */
MIAP[1]	/* MoveIndirectAbsPt */
ALIGNRP[ ]	/* AlignRelativePt */
SRP0[ ]	/* SetRefPoint0 */
ALIGNRP[ ]	/* AlignRelativePt */
SRP0[ ]	/* SetRefPoint0 */
ALIGNRP[ ]	/* AlignRelativePt */
MIAP[1]	/* MoveIndirectAbsPt */
ALIGNRP[ ]	/* AlignRelativePt */
SRP0[ ]	/* SetRefPoint0 */
ALIGNRP[ ]	/* AlignRelativePt */
SRP0[ ]	/* SetRefPoint0 */
ALIGNRP[ ]	/* AlignRelativePt */
SRP0[ ]	/* SetRefPoint0 */
MIRP[11101]	/* MoveIndirectRelPt */
ALIGNRP[ ]	/* AlignRelativePt */
MIRP[11101]	/* MoveIndirectRelPt */
ALIGNRP[ ]	/* AlignRelativePt */
SRP1[ ]	/* SetRefPoint1 */
IP[ ]	/* InterpolatePts */
MDAP[1]	/* MoveDirectAbsPt */
ALIGNRP[ ]	/* AlignRelativePt */
MIRP[11101]	/* MoveIndirectRelPt */
ALIGNRP[ ]	/* AlignRelativePt */
SDPVTL[1]	/* SetDualPVectorToLine */
SFVTCA[1]	/* SetFVectorToAxis */
MDAP[0]	/* MoveDirectAbsPt */
CALL[ ]	/* CallFunction */
RDTG[ ]	/* RoundDownToGrid */
SRP0[ ]	/* SetRefPoint0 */
MDRP[00100]	/* MoveDirectRelPt */
SDPVTL[1]	/* SetDualPVectorToLine */
MDAP[0]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
CALL[ ]	/* CallFunction */
RDTG[ ]	/* RoundDownToGrid */
SRP0[ ]	/* SetRefPoint0 */
MDRP[00100]	/* MoveDirectRelPt */
ISECT[ ]	/* MovePtToIntersect */
ISECT[ ]	/* MovePtToIntersect */
ISECT[ ]	/* MovePtToIntersect */
ISECT[ ]	/* MovePtToIntersect */
ISECT[ ]	/* MovePtToIntersect */
ISECT[ ]	/* MovePtToIntersect */
ISECT[ ]	/* MovePtToIntersect */
ISECT[ ]	/* MovePtToIntersect */
ISECT[ ]	/* MovePtToIntersect */
ISECT[ ]	/* MovePtToIntersect */
ISECT[ ]	/* MovePtToIntersect */
ISECT[ ]	/* MovePtToIntersect */
ISECT[ ]	/* MovePtToIntersect */
ISECT[ ]	/* MovePtToIntersect */
ISECT[ ]	/* MovePtToIntersect */
ISECT[ ]	/* MovePtToIntersect */
IUP[1]	/* InterpolateUntPts */
IUP[0]	/* InterpolateUntPts */
SVTCA[1]	/* SetFPVectorToAxis */
DELTAP1[ ]	/* DeltaExceptionP1 */
DELTAP1[ ]	/* DeltaExceptionP1 */
DELTAP2[ ]	/* DeltaExceptionP2 */
</string>
        <key>formatVersion</key>
        <string>1</string>
        <key>id</key>
        <string>b4a201aef15685db03eb83b34bbe5620f16d0dd7ced2f565ecfcbff6598ca6944733584f1069ae0586873ebf7f652e3b5edc6efe2e486c9344d4ec0c54718d9c</string>
      </dict>
    </dict>
  </lib>
</glyph>
