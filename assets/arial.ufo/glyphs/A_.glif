<?xml version='1.0' encoding='UTF-8'?>
<glyph name="A" format="2">
  <advance width="1366"/>
  <unicode hex="0041"/>
  <outline>
    <contour>
      <point x="-3" y="0" type="line"/>
      <point x="560" y="1466" type="line"/>
      <point x="769" y="1466" type="line"/>
      <point x="1369" y="0" type="line"/>
      <point x="1148" y="0" type="line"/>
      <point x="977" y="444" type="line"/>
      <point x="364" y="444" type="line"/>
      <point x="203" y="0" type="line"/>
    </contour>
    <contour>
      <point x="420" y="602" type="line"/>
      <point x="917" y="602" type="line"/>
      <point x="764" y="1008" type="line"/>
      <point x="694" y="1193"/>
      <point x="660" y="1312" type="qcurve"/>
      <point x="632" y="1171"/>
      <point x="581" y="1032" type="qcurve"/>
    </contour>
  </outline>
  <lib>
    <dict>
      <key>public.truetype.instructions</key>
      <dict>
        <key>assembly</key>
        <string>
PUSHB[ ]	/* 7 values pushed */
1 14 15 16 2 85 2
PUSHW[ ]	/* 1 value pushed */
-14
PUSHB[ ]	/* 5 values pushed */
15 16 2 85 2
PUSHW[ ]	/* 1 value pushed */
-8
PUSHB[ ]	/* 5 values pushed */
13 13 6 85 2
PUSHW[ ]	/* 1 value pushed */
-12
NPUSHB[ ]	/* 89 values pushed */
12 12 6 85 9 12 12 12 6 85 5 12 12 12 6 85 47 16 48 16 103 8 104 9 96 16 136 3 144 16 201 5 198 6 192 16 240 16 11 8 5 89 1 86 2 80 16 104 11 176 16 243 12 243 13 243 14 9 4 12 4 13 4 14 3 11 10 9 5 4 4 12 13 14 8 6 7 7 12 9 5 4 8 6 12 7 1 0 0
PUSHW[ ]	/* 1 value pushed */
-8
NPUSHB[ ]	/* 15 values pushed */
12 12 2 85 0 32 7 12 20 7 7 12 2 3 3
PUSHW[ ]	/* 1 value pushed */
-8
NPUSHB[ ]	/* 21 values pushed */
12 12 2 85 3 32 4 12 20 4 4 12 9 30 5 5 8 30 6 3 6
PUSHW[ ]	/* 1 value pushed */
624
NPUSHB[ ]	/* 9 values pushed */
0 8 12 233 64 2 1 2 2
PUSHW[ ]	/* 3 values pushed */
267 1 267
NPUSHB[ ]	/* 18 values pushed */
12 32 0 101 7 3 82 80 4 207 4 223 4 3 144 4 1 4
PUSHW[ ]	/* 1 value pushed */
257
NPUSHB[ ]	/* 11 values pushed */
80 12 192 7 223 12 3 144 12 1 12
PUSHW[ ]	/* 1 value pushed */
257
NPUSHB[ ]	/* 16 values pushed */
15 7 207 7 2 127 7 128 7 2 7 147 15 214 215 24
CALL[ ]	/* CallFunction */
SRP0[ ]	/* SetRefPoint0 */
MIRP[10100]	/* MoveIndirectRelPt */
DELTAP1[ ]	/* DeltaExceptionP1 */
DELTAP2[ ]	/* DeltaExceptionP2 */
RTHG[ ]	/* RoundToHalfGrid */
MIRP[10100]	/* MoveIndirectRelPt */
DELTAP1[ ]	/* DeltaExceptionP1 */
DELTAP2[ ]	/* DeltaExceptionP2 */
MIRP[10100]	/* MoveIndirectRelPt */
DELTAP1[ ]	/* DeltaExceptionP1 */
DELTAP2[ ]	/* DeltaExceptionP2 */
RTG[ ]	/* RoundToGrid */
MIRP[01101]	/* MoveIndirectRelPt */
SRP0[ ]	/* SetRefPoint0 */
MIRP[01101]	/* MoveIndirectRelPt */
SMD[ ]	/* SetMinimumDistance */
RTHG[ ]	/* RoundToHalfGrid */
SRP0[ ]	/* SetRefPoint0 */
MIRP[01101]	/* MoveIndirectRelPt */
MIRP[01101]	/* MoveIndirectRelPt */
SVTCA[0]	/* SetFPVectorToAxis */
RTG[ ]	/* RoundToGrid */
MIAP[1]	/* MoveIndirectAbsPt */
ALIGNRP[ ]	/* AlignRelativePt */
SMD[ ]	/* SetMinimumDistance */
MIRP[01101]	/* MoveIndirectRelPt */
MIAP[1]	/* MoveIndirectAbsPt */
MIRP[00100]	/* MoveIndirectRelPt */
ALIGNRP[ ]	/* AlignRelativePt */
SRP0[ ]	/* SetRefPoint0 */
MIRP[01101]	/* MoveIndirectRelPt */
ALIGNRP[ ]	/* AlignRelativePt */
SRP0[ ]	/* SetRefPoint0 */
MIRP[01101]	/* MoveIndirectRelPt */
SDPVTL[1]	/* SetDualPVectorToLine */
SFVTCA[1]	/* SetFVectorToAxis */
MDAP[0]	/* MoveDirectAbsPt */
CALL[ ]	/* CallFunction */
CALL[ ]	/* CallFunction */
RDTG[ ]	/* RoundDownToGrid */
SRP0[ ]	/* SetRefPoint0 */
MDRP[00100]	/* MoveDirectRelPt */
SDPVTL[1]	/* SetDualPVectorToLine */
MDAP[0]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
CALL[ ]	/* CallFunction */
CALL[ ]	/* CallFunction */
RDTG[ ]	/* RoundDownToGrid */
SRP0[ ]	/* SetRefPoint0 */
MDRP[00100]	/* MoveDirectRelPt */
SVTCA[1]	/* SetFPVectorToAxis */
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IP[ ]	/* InterpolatePts */
SRP1[ ]	/* SetRefPoint1 */
IP[ ]	/* InterpolatePts */
IP[ ]	/* InterpolatePts */
SDPVTL[1]	/* SetDualPVectorToLine */
SRP0[ ]	/* SetRefPoint0 */
MDRP[00100]	/* MoveDirectRelPt */
MDRP[00100]	/* MoveDirectRelPt */
SFVTPV[ ]	/* SetFVectorToPVector */
MDRP[00100]	/* MoveDirectRelPt */
MDRP[00100]	/* MoveDirectRelPt */
SDPVTL[1]	/* SetDualPVectorToLine */
SFVTCA[1]	/* SetFVectorToAxis */
SRP0[ ]	/* SetRefPoint0 */
MDRP[00100]	/* MoveDirectRelPt */
MDRP[00100]	/* MoveDirectRelPt */
SFVTPV[ ]	/* SetFVectorToPVector */
MDRP[00100]	/* MoveDirectRelPt */
MDRP[00100]	/* MoveDirectRelPt */
IUP[1]	/* InterpolateUntPts */
IUP[0]	/* InterpolateUntPts */
SVTCA[1]	/* SetFPVectorToAxis */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
GTEQ[ ]	/* GreaterThanOrEqual */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
30
LTEQ[ ]	/* LessThenOrEqual */
AND[ ]	/* LogicalAnd */
IF[ ]	/* If */
  PUSHB[ ]	/* 5 values pushed */
  4 15 3 8 7
  PUSHW[ ]	/* 3 values pushed */
  -16 0 -8
  SHPIX[ ]	/* ShiftZoneByPixel */
  SHPIX[ ]	/* ShiftZoneByPixel */
  SHPIX[ ]	/* ShiftZoneByPixel */
  SHPIX[ ]	/* ShiftZoneByPixel */
EIF[ ]	/* EndIf */
SVTCA[1]	/* SetFPVectorToAxis */
DELTAP3[ ]	/* DeltaExceptionP3 */
DELTAP2[ ]	/* DeltaExceptionP2 */
DELTAP1[ ]	/* DeltaExceptionP1 */
CALL[ ]	/* CallFunction */
CALL[ ]	/* CallFunction */
CALL[ ]	/* CallFunction */
CALL[ ]	/* CallFunction */
CALL[ ]	/* CallFunction */
CALL[ ]	/* CallFunction */
</string>
        <key>formatVersion</key>
        <string>1</string>
        <key>id</key>
        <string>w1366l-3+0l560+1466l769+1466l1369+0l1148+0l977+444l364+444l203+0|l420+602l917+602l764+1008o694+1193q660+1312o632+1171q581+1032|</string>
      </dict>
    </dict>
  </lib>
</glyph>
