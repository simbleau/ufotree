<?xml version='1.0' encoding='UTF-8'?>
<glyph name="Alphatonos" format="2">
  <advance width="1367"/>
  <unicode hex="0386"/>
  <outline>
    <contour>
      <point x="-1" y="0" type="line"/>
      <point x="562" y="1466" type="line"/>
      <point x="771" y="1466" type="line"/>
      <point x="1371" y="0" type="line"/>
      <point x="1150" y="0" type="line"/>
      <point x="979" y="444" type="line"/>
      <point x="366" y="444" type="line"/>
      <point x="205" y="0" type="line"/>
    </contour>
    <contour>
      <point x="422" y="602" type="line"/>
      <point x="919" y="602" type="line"/>
      <point x="766" y="1008" type="line"/>
      <point x="693" y="1202"/>
      <point x="662" y="1312" type="qcurve"/>
      <point x="634" y="1171"/>
      <point x="583" y="1032" type="qcurve"/>
    </contour>
    <contour>
      <point x="54" y="1186" type="line"/>
      <point x="187" y="1466" type="line"/>
      <point x="423" y="1466" type="line"/>
      <point x="203" y="1186" type="line"/>
    </contour>
  </outline>
  <lib>
    <dict>
      <key>public.truetype.instructions</key>
      <dict>
        <key>assembly</key>
        <string>
PUSHB[ ]	/* 7 values pushed */
1 14 15 16 2 85 2
PUSHW[ ]	/* 1 value pushed */
-14
PUSHB[ ]	/* 5 values pushed */
15 16 2 85 2
PUSHW[ ]	/* 1 value pushed */
-4
PUSHB[ ]	/* 5 values pushed */
16 16 6 85 2
PUSHW[ ]	/* 1 value pushed */
-10
PUSHB[ ]	/* 5 values pushed */
13 13 6 85 2
PUSHW[ ]	/* 1 value pushed */
-8
NPUSHB[ ]	/* 101 values pushed */
12 12 6 85 9 12 12 12 6 85 5 12 12 12 6 85 47 20 48 20 103 8 104 9 96 20 136 3 159 15 144 20 201 5 198 6 192 20 240 20 12 8 5 89 1 86 2 80 20 104 11 176 20 243 12 243 13 243 14 9 4 12 4 13 4 14 3 15 0 18 16 18 2 18 218 16 2 11 10 9 5 4 4 12 13 14 8 6 7 7 12 9 5 4 8 6 12 7 2 3 3
PUSHW[ ]	/* 1 value pushed */
-8
NPUSHB[ ]	/* 15 values pushed */
12 12 2 85 3 32 4 12 20 4 4 12 1 0 0
PUSHW[ ]	/* 1 value pushed */
-8
NPUSHB[ ]	/* 21 values pushed */
12 12 2 85 0 32 7 12 20 7 7 12 9 30 5 5 8 30 6 3 6
PUSHW[ ]	/* 1 value pushed */
624
NPUSHB[ ]	/* 14 values pushed */
0 12 233 2 1 2 16 82 17 82 18 233 64 15
PUSHW[ ]	/* 1 value pushed */
-64
PUSHB[ ]	/* 4 values pushed */
18 21 52 15
PUSHW[ ]	/* 1 value pushed */
-64
NPUSHB[ ]	/* 10 values pushed */
11 12 52 223 15 1 15 84 0 2
PUSHW[ ]	/* 3 values pushed */
267 1 267
NPUSHB[ ]	/* 18 values pushed */
12 32 0 101 7 3 82 80 4 207 4 223 4 3 144 4 1 4
PUSHW[ ]	/* 1 value pushed */
257
NPUSHB[ ]	/* 11 values pushed */
80 12 192 7 223 12 3 144 12 1 12
PUSHW[ ]	/* 1 value pushed */
257
NPUSHB[ ]	/* 13 values pushed */
15 7 207 7 2 127 7 128 7 2 7 147 19
PUSHW[ ]	/* 3 values pushed */
411 398 24
CALL[ ]	/* CallFunction */
SRP0[ ]	/* SetRefPoint0 */
MIRP[10100]	/* MoveIndirectRelPt */
DELTAP1[ ]	/* DeltaExceptionP1 */
DELTAP2[ ]	/* DeltaExceptionP2 */
RTHG[ ]	/* RoundToHalfGrid */
MIRP[10100]	/* MoveIndirectRelPt */
DELTAP1[ ]	/* DeltaExceptionP1 */
DELTAP2[ ]	/* DeltaExceptionP2 */
MIRP[10100]	/* MoveIndirectRelPt */
DELTAP1[ ]	/* DeltaExceptionP1 */
DELTAP2[ ]	/* DeltaExceptionP2 */
RTG[ ]	/* RoundToGrid */
MIRP[01101]	/* MoveIndirectRelPt */
SRP0[ ]	/* SetRefPoint0 */
MIRP[01101]	/* MoveIndirectRelPt */
SMD[ ]	/* SetMinimumDistance */
RTHG[ ]	/* RoundToHalfGrid */
SRP0[ ]	/* SetRefPoint0 */
MIRP[01101]	/* MoveIndirectRelPt */
MIRP[01101]	/* MoveIndirectRelPt */
RTG[ ]	/* RoundToGrid */
SRP0[ ]	/* SetRefPoint0 */
MIRP[10100]	/* MoveIndirectRelPt */
DELTAP3[ ]	/* DeltaExceptionP3 */
CALL[ ]	/* CallFunction */
CALL[ ]	/* CallFunction */
SMD[ ]	/* SetMinimumDistance */
MIRP[11101]	/* MoveIndirectRelPt */
MIRP[10100]	/* MoveIndirectRelPt */
MIRP[01101]	/* MoveIndirectRelPt */
SVTCA[0]	/* SetFPVectorToAxis */
MIAP[1]	/* MoveIndirectAbsPt */
ALIGNRP[ ]	/* AlignRelativePt */
MIRP[01101]	/* MoveIndirectRelPt */
MDAP[1]	/* MoveDirectAbsPt */
MIRP[00100]	/* MoveIndirectRelPt */
ALIGNRP[ ]	/* AlignRelativePt */
SRP0[ ]	/* SetRefPoint0 */
MIRP[01101]	/* MoveIndirectRelPt */
ALIGNRP[ ]	/* AlignRelativePt */
SRP0[ ]	/* SetRefPoint0 */
MIRP[01101]	/* MoveIndirectRelPt */
SDPVTL[1]	/* SetDualPVectorToLine */
SFVTCA[1]	/* SetFVectorToAxis */
MDAP[0]	/* MoveDirectAbsPt */
CALL[ ]	/* CallFunction */
CALL[ ]	/* CallFunction */
RDTG[ ]	/* RoundDownToGrid */
SRP0[ ]	/* SetRefPoint0 */
MDRP[00100]	/* MoveDirectRelPt */
SDPVTL[1]	/* SetDualPVectorToLine */
MDAP[0]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
CALL[ ]	/* CallFunction */
CALL[ ]	/* CallFunction */
RDTG[ ]	/* RoundDownToGrid */
SRP0[ ]	/* SetRefPoint0 */
MDRP[00100]	/* MoveDirectRelPt */
SVTCA[1]	/* SetFPVectorToAxis */
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IP[ ]	/* InterpolatePts */
SRP1[ ]	/* SetRefPoint1 */
IP[ ]	/* InterpolatePts */
IP[ ]	/* InterpolatePts */
SDPVTL[1]	/* SetDualPVectorToLine */
SRP0[ ]	/* SetRefPoint0 */
MDRP[00100]	/* MoveDirectRelPt */
MDRP[00100]	/* MoveDirectRelPt */
SFVTPV[ ]	/* SetFVectorToPVector */
MDRP[00100]	/* MoveDirectRelPt */
MDRP[00100]	/* MoveDirectRelPt */
SDPVTL[1]	/* SetDualPVectorToLine */
SFVTCA[1]	/* SetFVectorToAxis */
SRP0[ ]	/* SetRefPoint0 */
MDRP[00100]	/* MoveDirectRelPt */
MDRP[00100]	/* MoveDirectRelPt */
SFVTPV[ ]	/* SetFVectorToPVector */
MDRP[00100]	/* MoveDirectRelPt */
MDRP[00100]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFPVectorToAxis */
RTG[ ]	/* RoundToGrid */
MIAP[1]	/* MoveIndirectAbsPt */
MIRP[11101]	/* MoveIndirectRelPt */
DELTAP1[ ]	/* DeltaExceptionP1 */
ALIGNRP[ ]	/* AlignRelativePt */
IUP[1]	/* InterpolateUntPts */
IUP[0]	/* InterpolateUntPts */
SVTCA[1]	/* SetFPVectorToAxis */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
GTEQ[ ]	/* GreaterThanOrEqual */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
30
LTEQ[ ]	/* LessThenOrEqual */
AND[ ]	/* LogicalAnd */
IF[ ]	/* If */
  PUSHB[ ]	/* 5 values pushed */
  4 15 3 8 7
  PUSHW[ ]	/* 3 values pushed */
  -16 0 -8
  SHPIX[ ]	/* ShiftZoneByPixel */
  SHPIX[ ]	/* ShiftZoneByPixel */
  SHPIX[ ]	/* ShiftZoneByPixel */
  SHPIX[ ]	/* ShiftZoneByPixel */
EIF[ ]	/* EndIf */
SVTCA[1]	/* SetFPVectorToAxis */
DELTAP3[ ]	/* DeltaExceptionP3 */
DELTAP2[ ]	/* DeltaExceptionP2 */
DELTAP1[ ]	/* DeltaExceptionP1 */
CALL[ ]	/* CallFunction */
CALL[ ]	/* CallFunction */
CALL[ ]	/* CallFunction */
CALL[ ]	/* CallFunction */
CALL[ ]	/* CallFunction */
CALL[ ]	/* CallFunction */
CALL[ ]	/* CallFunction */
</string>
        <key>formatVersion</key>
        <string>1</string>
        <key>id</key>
        <string>df9c8e12700fa387776339a20db320ad7444717116c39c525fe5af97540c6504d28f504faabcfc0dc9076fd2c85bbc147ba4319b5682a80f66bce93d783abcc3</string>
      </dict>
    </dict>
  </lib>
</glyph>
