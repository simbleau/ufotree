<?xml version='1.0' encoding='UTF-8'?>
<glyph name="y" format="2">
  <advance width="1024"/>
  <unicode hex="0079"/>
  <outline>
    <contour>
      <point x="127" y="-409" type="qcurve"/>
      <point x="107" y="-240" type="line"/>
      <point x="166" y="-256"/>
      <point x="210" y="-256" type="qcurve"/>
      <point x="270" y="-256"/>
      <point x="342" y="-216"/>
      <point x="365" y="-180" type="qcurve"/>
      <point x="382" y="-153"/>
      <point x="420" y="-46" type="qcurve"/>
      <point x="425" y="-31"/>
      <point x="436" y="-2" type="qcurve"/>
      <point x="33" y="1062" type="line"/>
      <point x="227" y="1062" type="line"/>
      <point x="448" y="447" type="line"/>
      <point x="491" y="330"/>
      <point x="525" y="201" type="qcurve"/>
      <point x="556" y="325"/>
      <point x="599" y="443" type="qcurve"/>
      <point x="826" y="1062" type="line"/>
      <point x="1006" y="1062" type="line"/>
      <point x="602" y="-18" type="line"/>
      <point x="537" y="-193"/>
      <point x="501" y="-259" type="qcurve"/>
      <point x="453" y="-348"/>
      <point x="329" y="-431"/>
      <point x="243" y="-431" type="qcurve"/>
      <point x="191" y="-431"/>
    </contour>
  </outline>
  <lib>
    <dict>
      <key>public.truetype.instructions</key>
      <dict>
        <key>assembly</key>
        <string>
PUSHB[ ]	/* 2 values pushed */
2 2
RS[ ]	/* ReadStore */
EQ[ ]	/* Equal */
IF[ ]	/* If */
  NPUSHB[ ]	/* 29 values pushed */
  10 20 15 3 11 3 28 25 15 18 6 11 6 19 64 18 15 32 11 64 12 32 15 24 15 15 2 85 15
  RTHG[ ]	/* RoundToHalfGrid */
  MDAP[1]	/* MoveDirectAbsPt */
  CALL[ ]	/* CallFunction */
  SMD[ ]	/* SetMinimumDistance */
  MDRP[11101]	/* MoveDirectRelPt */
  SMD[ ]	/* SetMinimumDistance */
  RTG[ ]	/* RoundToGrid */
  MDRP[01101]	/* MoveDirectRelPt */
  SMD[ ]	/* SetMinimumDistance */
  RTHG[ ]	/* RoundToHalfGrid */
  SRP0[ ]	/* SetRefPoint0 */
  MDRP[11101]	/* MoveDirectRelPt */
  SMD[ ]	/* SetMinimumDistance */
  RTG[ ]	/* RoundToGrid */
  MDRP[01101]	/* MoveDirectRelPt */
  SVTCA[0]	/* SetFPVectorToAxis */
  MIAP[1]	/* MoveIndirectAbsPt */
  MIAP[1]	/* MoveIndirectAbsPt */
  MIAP[1]	/* MoveIndirectAbsPt */
  MIRP[01101]	/* MoveIndirectRelPt */
  SRP2[ ]	/* SetRefPoint2 */
  SLOOP[ ]	/* SetLoopVariable */
  IP[ ]	/* InterpolatePts */
  IUP[1]	/* InterpolateUntPts */
  IUP[0]	/* InterpolateUntPts */
ELSE[ ]	/* Else */
  PUSHB[ ]	/* 4 values pushed */
  15 28 1 15
  PUSHW[ ]	/* 1 value pushed */
  -34
  NPUSHB[ ]	/* 109 values pushed */
  28 57 40 20 86 15 175 10 3 64 13 64 15 2 15 32 40 48 52 16 32 40 48 52 7 12 9 18 22 13 24 18 39 11 39 12 39 13 54 12 54 13 53 14 153 17 11 40 18 40 19 72 22 89 18 89 19 89 21 105 18 105 19 105 21 121 6 118 13 121 17 122 20 122 21 133 13 138 17 140 18 140 19 137 20 152 10 168 11 188 16 187 17 186 20 234 10 231 20 245 13 253 16 249 20 255 28 30 18
  PUSHB[ ]	/* 2 values pushed */
  6 2
  RS[ ]	/* ReadStore */
  EQ[ ]	/* Equal */
  IF[ ]	/* If */
    NPUSHB[ ]	/* 22 values pushed */
    19 11 28 27 4 15 68 15 132 15 3 15 25 11 3 28 25 15 18 6 11 6
    SVTCA[0]	/* SetFPVectorToAxis */
    MIAP[1]	/* MoveIndirectAbsPt */
    MIAP[1]	/* MoveIndirectAbsPt */
    MIAP[1]	/* MoveIndirectAbsPt */
    MIRP[01101]	/* MoveIndirectRelPt */
    SRP1[ ]	/* SetRefPoint1 */
    SRP2[ ]	/* SetRefPoint2 */
    IP[ ]	/* InterpolatePts */
    DELTAP1[ ]	/* DeltaExceptionP1 */
    SVTCA[1]	/* SetFPVectorToAxis */
    SRP1[ ]	/* SetRefPoint1 */
    SRP2[ ]	/* SetRefPoint2 */
    IP[ ]	/* InterpolatePts */
    IP[ ]	/* InterpolatePts */
  ELSE[ ]	/* Else */
    NPUSHB[ ]	/* 55 values pushed */
    15 15 12 16 17 18 18 10 0 3 25 20 19 19 37 18 10 20 18 18 10 15 12 15 17 12 37 11 10 20 11 11 10 19 18 18 12 12 11 6 3 28 25 15 0 28 16 28 2 47 28 191 28 2 28
    PUSHW[ ]	/* 1 value pushed */
    575
    PUSHB[ ]	/* 6 values pushed */
    15 19 64 18 64 20
    PUSHW[ ]	/* 1 value pushed */
    596
    NPUSHB[ ]	/* 11 values pushed */
    63 18 64 18 2 95 18 191 18 2 18
    PUSHW[ ]	/* 1 value pushed */
    322
    PUSHB[ ]	/* 7 values pushed */
    15 1 34 0 69 27 10
    PUSHW[ ]	/* 1 value pushed */
    596
    NPUSHB[ ]	/* 18 values pushed */
    15 32 11 64 64 32 12 48 12 79 12 3 80 12 255 12 2 12
    PUSHW[ ]	/* 1 value pushed */
    322
    PUSHB[ ]	/* 4 values pushed */
    47 15 1 15
    PUSHW[ ]	/* 1 value pushed */
    575
    PUSHB[ ]	/* 5 values pushed */
    27 32 124 102 24
    CALL[ ]	/* CallFunction */
    SMD[ ]	/* SetMinimumDistance */
    RTHG[ ]	/* RoundToHalfGrid */
    SRP0[ ]	/* SetRefPoint0 */
    MIRP[11101]	/* MoveIndirectRelPt */
    DELTAP2[ ]	/* DeltaExceptionP2 */
    MIRP[10100]	/* MoveIndirectRelPt */
    DELTAP1[ ]	/* DeltaExceptionP1 */
    DELTAP2[ ]	/* DeltaExceptionP2 */
    SMD[ ]	/* SetMinimumDistance */
    RTG[ ]	/* RoundToGrid */
    MIRP[01101]	/* MoveIndirectRelPt */
    SMD[ ]	/* SetMinimumDistance */
    RTHG[ ]	/* RoundToHalfGrid */
    SRP0[ ]	/* SetRefPoint0 */
    MIRP[01101]	/* MoveIndirectRelPt */
    RTG[ ]	/* RoundToGrid */
    SRP0[ ]	/* SetRefPoint0 */
    MIRP[10100]	/* MoveIndirectRelPt */
    MIRP[00100]	/* MoveIndirectRelPt */
    RTHG[ ]	/* RoundToHalfGrid */
    SRP0[ ]	/* SetRefPoint0 */
    MIRP[00100]	/* MoveIndirectRelPt */
    DELTAP1[ ]	/* DeltaExceptionP1 */
    DELTAP2[ ]	/* DeltaExceptionP2 */
    MIRP[01101]	/* MoveIndirectRelPt */
    SMD[ ]	/* SetMinimumDistance */
    RTG[ ]	/* RoundToGrid */
    SRP0[ ]	/* SetRefPoint0 */
    MIRP[01101]	/* MoveIndirectRelPt */
    RTHG[ ]	/* RoundToHalfGrid */
    SRP0[ ]	/* SetRefPoint0 */
    MIRP[00100]	/* MoveIndirectRelPt */
    DELTAP1[ ]	/* DeltaExceptionP1 */
    DELTAP2[ ]	/* DeltaExceptionP2 */
    SVTCA[0]	/* SetFPVectorToAxis */
    RTG[ ]	/* RoundToGrid */
    MIAP[1]	/* MoveIndirectAbsPt */
    MIRP[01101]	/* MoveIndirectRelPt */
    MIAP[1]	/* MoveIndirectAbsPt */
    ALIGNRP[ ]	/* AlignRelativePt */
    SRP0[ ]	/* SetRefPoint0 */
    ALIGNRP[ ]	/* AlignRelativePt */
    SRP0[ ]	/* SetRefPoint0 */
    ALIGNRP[ ]	/* AlignRelativePt */
    SDPVTL[1]	/* SetDualPVectorToLine */
    SFVTCA[1]	/* SetFVectorToAxis */
    MDAP[0]	/* MoveDirectAbsPt */
    CALL[ ]	/* CallFunction */
    SFVTL[0]	/* SetFVectorToLine */
    RDTG[ ]	/* RoundDownToGrid */
    SRP0[ ]	/* SetRefPoint0 */
    MDRP[00100]	/* MoveDirectRelPt */
    SDPVTL[1]	/* SetDualPVectorToLine */
    SFVTCA[1]	/* SetFVectorToAxis */
    MDAP[0]	/* MoveDirectAbsPt */
    RTG[ ]	/* RoundToGrid */
    CALL[ ]	/* CallFunction */
    SFVTPV[ ]	/* SetFVectorToPVector */
    RDTG[ ]	/* RoundDownToGrid */
    SRP0[ ]	/* SetRefPoint0 */
    MDRP[00100]	/* MoveDirectRelPt */
    SVTCA[0]	/* SetFPVectorToAxis */
    SRP1[ ]	/* SetRefPoint1 */
    SRP2[ ]	/* SetRefPoint2 */
    IP[ ]	/* InterpolatePts */
    SDPVTL[1]	/* SetDualPVectorToLine */
    SFVTPV[ ]	/* SetFVectorToPVector */
    SRP0[ ]	/* SetRefPoint0 */
    ALIGNRP[ ]	/* AlignRelativePt */
    ALIGNRP[ ]	/* AlignRelativePt */
    SFVTL[0]	/* SetFVectorToLine */
    MDRP[00100]	/* MoveDirectRelPt */
    MPPEM[ ]	/* MeasurePixelPerEm */
    PUSHB[ ]	/* 1 value pushed */
    14
    GTEQ[ ]	/* GreaterThanOrEqual */
    MPPEM[ ]	/* MeasurePixelPerEm */
    PUSHB[ ]	/* 1 value pushed */
    24
    LTEQ[ ]	/* LessThenOrEqual */
    AND[ ]	/* LogicalAnd */
    IF[ ]	/* If */
      PUSHW[ ]	/* 4 values pushed */
      12 -24 11 -24
      SVTCA[1]	/* SetFPVectorToAxis */
      SHPIX[ ]	/* ShiftZoneByPixel */
      SHPIX[ ]	/* ShiftZoneByPixel */
    EIF[ ]	/* EndIf */
  EIF[ ]	/* EndIf */
  IUP[1]	/* InterpolateUntPts */
  IUP[0]	/* InterpolateUntPts */
  SVTCA[1]	/* SetFPVectorToAxis */
  RS[ ]	/* ReadStore */
  NOT[ ]	/* LogicalNot */
  IF[ ]	/* If */
    PUSHW[ ]	/* 2 values pushed */
    20 -34
    PUSHB[ ]	/* 7 values pushed */
    55 57 10 34 55 57 14
    PUSHW[ ]	/* 1 value pushed */
    -24
    PUSHB[ ]	/* 6 values pushed */
    21 57 17 34 21 57
    CALL[ ]	/* CallFunction */
    CALL[ ]	/* CallFunction */
    CALL[ ]	/* CallFunction */
    CALL[ ]	/* CallFunction */
  EIF[ ]	/* EndIf */
  DELTAP1[ ]	/* DeltaExceptionP1 */
  DELTAP2[ ]	/* DeltaExceptionP2 */
  CALL[ ]	/* CallFunction */
  CALL[ ]	/* CallFunction */
  SVTCA[0]	/* SetFPVectorToAxis */
  DELTAP2[ ]	/* DeltaExceptionP2 */
  DELTAP1[ ]	/* DeltaExceptionP1 */
  CALL[ ]	/* CallFunction */
  SVTCA[1]	/* SetFPVectorToAxis */
  DELTAP1[ ]	/* DeltaExceptionP1 */
EIF[ ]	/* EndIf */
</string>
        <key>formatVersion</key>
        <string>1</string>
        <key>id</key>
        <string>95b4af27412d35f1ed45aa3c1655f7b697175cf6369a44c79967973748627f74225735c3094f26079bd5e4306061ab499cf01c2113453afcc9020298be485842</string>
      </dict>
    </dict>
  </lib>
</glyph>
